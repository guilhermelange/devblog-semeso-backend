generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comments {
  id          BigInt   @id @default(autoincrement())
  user_id     BigInt
  post_id     BigInt
  content     String
  create_date DateTime @default(now()) @db.Timestamp(6)
  posts       posts    @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model posts {
  id                    BigInt                  @id @default(autoincrement())
  user_id               BigInt
  title                 String
  description           String
  content               String
  create_date           DateTime                @default(now()) @db.Timestamp(6)
  update_date           DateTime                @default(now()) @db.Timestamp(6)
  time_read             Int?
  slug                  String                  @default("")
  comments              comments[]
  users                 users                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  upload_image          Boolean                 @default(false)
  posts_users_favorites posts_users_favorites[]
}

model posts_users_favorites {
  user_id BigInt
  post_id BigInt
  posts   posts  @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users   users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, post_id])
}

model users {
  id                    BigInt                  @id @default(autoincrement())
  name                  String
  email                 String
  password              String
  description           String
  image                 String
  comments              comments[]
  posts                 posts[]
  posts_users_favorites posts_users_favorites[]
}
